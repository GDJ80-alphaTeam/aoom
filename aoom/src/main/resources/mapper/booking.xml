<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alpha.aoom.booking.service.BookingMapper">
	
	<!-- 컬럼 이름 sql조각 -->
	<sql id="booking_col">
		 b.booking_id
		,b.room_id
		,b.user_id
		,b.stay_people
		,b.create_date
		,b.bookstat_code
		,b.paystat_code
		,TO_CHAR(b.check_in , 'yyyy-mm-dd') as check_in
		,TO_CHAR(b.check_out , 'yyyy-mm-dd') as check_out
		,b.total_price
	</sql>

	<!-- 로그인한 사용자의 예약리스트 조회 , 예약 정보조회 , 예약 취소정보 조회-->
	<select id="selectListByGuestId" parameterType="map" resultType="camelCaseMap">
		SELECT
			*
		FROM
			(SELECT
				 rownum as rn
		  		,booking_id
		  		,room_id
		  		,create_date
		        ,guest_id
		        ,room_name
		        ,host_id
		        ,main_image
		        ,address
		        ,bookstat_name
		        ,paystat_name 
		        ,bookstat_code
		        ,check_in
		        ,check_out
		        ,total_price
		        ,stay_people
			FROM
			    (
			    SELECT
			         <include refid="booking_col"/>
			        ,b.user_id AS guest_id
			        ,r.room_name
			        ,r.user_id AS host_id
			        ,r.main_image
			        ,REPLACE(r.address, '^', '  ') AS address
			        ,c.code_name AS bookstat_name
			        ,c2.code_name AS paystat_name 
			         	 
			    FROM
			        booking b
				LEFT JOIN
					room r
				ON
					b.room_id = r.room_id
				LEFT JOIN
	        		code c
			    ON
			        c.code_key = b.bookstat_code
			    LEFT JOIN
			        code c2
			    ON 
			    	c2.code_key = b.paystat_code        								        	
			    WHERE
			    	1=1
			    <choose>
				    <when test="userId != null and bookingId != null">
				        AND booking_id = #{bookingId}
				    </when>
				    <otherwise>
				        <if test="userId != null"> 
				            AND booking_id IN (
				                SELECT 
				                    booking_id
				                FROM     
				                    booking 
				                WHERE 
				                    user_id = #{userId}
				                )    
				        </if>
				        <if test="bookingId != null">
				            AND booking_id = #{bookingId}
				        </if>
				    </otherwise>
				</choose>    
			    ORDER BY 
			    	booking_id DESC    
				)
       	)
		 WHERE
       		rn <![CDATA[>]]> #{beginRow} and rn <![CDATA[<=]]> #{endRow}     
	</select>

	
	<!-- 유저의 총예약수 -->
	<select id="selectByTotalCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(*) AS cnt
		FROM
			booking	
		WHERE 
			user_id = #{userId}	
			<if test="userSecessionChk != null and userSecessionChk == true">
			    AND bookstat_code IN ('bst01', 'bst02')
			</if>
	</select>
	
	<!-- 예약추가 -->
	<insert id="insert" parameterType="map">
 	    <!-- booking INSERT 전 사용가능한 booking_Id가져와서 param에 추가후, INSERT 쿼리에 적용 -->
	    <selectKey keyProperty="bookingId" resultType="String" order="BEFORE">
	        SELECT 
	        	'b' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(NVL(MAX(SUBSTR(booking_id, 10, 2)), 0) + 1, 2, '0') AS booking_id
	        FROM 
	        	booking
	        WHERE 
	        	booking_id LIKE 'b' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
	    </selectKey>
		INSERT INTO booking(
		     booking_id
		    ,room_id
		    ,user_id
		    ,stay_people
		    ,create_date
		    ,bookstat_code
		    ,paystat_code
		    ,check_in
		    ,check_out
		    ,total_price
		) VALUES(
		     #{bookingId}
		    ,#{roomId}
		    ,#{userId}
		    ,#{usePeople}
		    ,SYSDATE
		    ,'bst02'
		    ,'pay02'
		    ,#{startDate}
		    ,#{endDate}
		    ,#{paymentPrice}
		)
	</insert>
	
	<!-- 후기입력시 예약상태변화 -->
	<update id="updateBookingStat" parameterType="map">
		UPDATE 
			booking
		SET 
			bookstat_code = #{bookstatCode}
		WHERE 
			booking_id = #{bookingId}
	</update>
	
	<!-- 예약페이지 접근시 유효성검사 -->
	<select id="selectByInvalidAccess" parameterType="map" resultType="int">
		SELECT
		    count(*) as cnt
		FROM
		    booking
		WHERE
		    user_id = #{userId}
		    AND booking_id = #{bookingId}
	</select>
	
	<!-- 로그인 유저의 호스팅한 숙소의 예약 목록 -->
	<select id="selectListByUserId" parameterType="map" resultType="camelCaseMap">
		SELECT
			*
		FROM(	
			SELECT 
				 t.*
				,ROWNUM AS rnum
			FROM (
				SELECT
					 br.booking_id
				    ,TO_CHAR(MIN(oneday), 'yy/mm/dd') AS check_in
					,TO_CHAR(MAX(oneday+1), 'yy/mm/dd') AS check_out
				    ,br.room_name
				    ,br.user_id AS guest_id
				    ,br.bookstat_code
				    ,br.room_id
				    ,TO_CHAR(br.total_price, '999,999,999') AS total_price
				FROM
				    booking_oneday_price_map bopm
				INNER JOIN
				    (
				    SELECT
				    	 <include refid="booking_col"/>
				        ,r.room_name
				    FROM
				        booking b
				    INNER JOIN
				        (
				        SELECT
				             room_id
				            ,room_name
				        FROM
				            room
				        WHERE
				            user_id = #{hostId}
				            AND roomstat_code = 'rst03'
				        ) r
				    ON
				        b.room_id = r.room_id
			        WHERE
			        	1 = 1
			        <if test="bookStat == 'bst02'">
			        	AND bookstat_code = 'bst02'
			        </if>
			        <if test="bookStat == 'bst03'">
			        	AND (bookstat_code = 'bst03' OR bookstat_code = 'bst04')
			        </if>
			        <if test="bookStat == 'bst05'">
			        	AND bookstat_code = 'bst05'
			        </if>
				    )br
				ON
				    bopm.booking_id = br.booking_id
				WHERE
					1 = 1
					<if test="selectRoom != null and !selectRoom.equals('') and !selectRoom.equals('all')">
						AND br.room_id = #{selectRoom}
					</if>
					<if test="startDate != null and !startDate.equals('')">
						AND oneday <![CDATA[>=]]> TO_DATE(#{startDate}, 'yy/mm/dd')
					</if>
					<if test="endDate != null and !endDate.equals('')">
						AND oneday <![CDATA[<]]> TO_DATE(#{endDate}, 'yy/mm/dd')
					</if>
				GROUP BY
					 br.booking_id
				    ,br.room_name
				    ,br.user_id
				    ,br.bookstat_code
				    ,oneday
				    ,br.room_id
				    ,br.total_price
				ORDER BY
					check_in DESC
				)t
			)
		WHERE
			rnum > #{beginRow} AND rnum <![CDATA[<=]]> #{beginRow} + #{rowPerPage}
	</select>
	
	<!-- 로그인 유저의 호스팅한 숙소의 예약 목록의 행의 갯수 -->
	<select id="selectListByUserIdCnt" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	    FROM (
	        SELECT
	             TO_CHAR(MIN(oneday), 'yy/mm/dd') AS check_in
	            ,TO_CHAR(MAX(oneday+1), 'yy/mm/dd') AS check_out
	            ,br.room_name
	            ,br.user_id AS guest_id
	            ,br.bookstat_code
	            ,br.room_id
	        FROM
	            booking_oneday_price_map bopm
	        INNER JOIN
	            (
	            SELECT
	                 <include refid="booking_col"/>
	                ,r.room_name
	            FROM
	                booking b
	            INNER JOIN
	                (
	                SELECT
	                     room_id
	                    ,room_name
	                FROM
	                    room
	                WHERE
	                    user_id = #{hostId}
	                    AND roomstat_code = 'rst03'
	                ) r
	            ON
	                b.room_id = r.room_id
	            WHERE
	                1 = 1
	            <if test="bookStat == 'bst02'">
	                AND bookstat_code = 'bst02'
	            </if>
	            <if test="bookStat == 'bst03'">
	                AND (bookstat_code = 'bst03' OR bookstat_code = 'bst04')
	            </if>
	            <if test="bookStat == 'bst05'">
	                AND bookstat_code = 'bst05'
	            </if>
	            ) br
	        ON
	            bopm.booking_id = br.booking_id
	        WHERE
	            1 = 1
			<if test="selectRoom != null and !selectRoom.equals('') and !selectRoom.equals('all')">
				AND br.room_id = #{selectRoom}
			</if>
			<if test="startDate != null and !startDate.equals('')">
				AND oneday <![CDATA[>=]]> TO_DATE(#{startDate}, 'yy/mm/dd')
			</if>
			<if test="endDate != null and !endDate.equals('')">
				AND oneday <![CDATA[<]]> TO_DATE(#{endDate}, 'yy/mm/dd')
			</if>
	        GROUP BY
	             br.room_name
	            ,br.user_id
	            ,br.bookstat_code
	            ,oneday
	            ,br.room_id
	    ) subquery
	</select>
	
	<!-- 호스트 예약 상세보기 -->
	<select id="selectByBookingId" parameterType="map" resultType="camelCaseMap">
		SELECT
			 r.room_id
		    ,r.main_image
		    ,r.room_name
		    ,REPLACE(r.address, '^', ' ') AS address
		    ,u.user_image
		    ,u.user_id
		    ,b.stay_people
		    ,u.user_phone
		    ,TO_CHAR(b.total_price, '999,999,999') AS total_price
		    ,TO_CHAR(b.check_in, 'yy/mm/dd') AS check_in
		    ,TO_CHAR(b.check_out, 'yy/mm/dd') AS check_out
		    ,b.bookstat_code
		FROM
		    booking b
		INNER JOIN
		    users u
		ON
		    b.user_id = u.user_id
		INNER JOIN
		    room r
		ON
		    b.room_id = r.room_id
		WHERE
		    booking_id = #{bookingId}
	</select>
	
	<!-- 오늘 기준 예약 정보 조회 -->
	<select id="selectListBySysdate" parameterType="map" resultType="camelCaseMap">
		SELECT
		     b.booking_id
		    ,b.room_id
		    ,b.user_id
		    ,b.stay_people
		    ,TO_CHAR(b.check_in, 'yy/mm/dd') AS check_in
		    ,TO_CHAR(b.check_out, 'yy/mm/dd') AS check_out
		    ,TO_CHAR(b.total_price, '999,999,999') AS total_price
		FROM 
		    booking b
		WHERE
		    b.room_id IN 
		    (SELECT	
		        room_id
		    FROM
		        room
		    WHERE
		        user_id = #{userId})
			<if test='actionType == null or actionType.equals("")'>
		   	    AND TRUNC(b.check_out) = TRUNC(SYSDATE)
		   	    AND b.bookstat_code = 'bst02'
			</if>
			<if test='actionType != null and actionType.equals("hosting")'>
		        AND TRUNC(b.check_in) <![CDATA[<=]]> TRUNC(SYSDATE)
		        AND TRUNC(b.check_out) >= TRUNC(SYSDATE)
		        AND b.bookstat_code = 'bst02'
			</if>
			<if test='actionType != null and actionType.equals("checkIn")'>
		        AND TRUNC(b.check_in) = TRUNC(SYSDATE)
		        AND b.bookstat_code = 'bst02'
			</if>
			<if test='actionType != null and actionType.equals("upComing")'>
		        AND TRUNC(b.check_in) > TRUNC(SYSDATE)
		        AND b.bookstat_code = 'bst02'
			</if>
			<if test='actionType != null and actionType.equals("pendingReview")'>
		        AND b.bookstat_code = 'bst03'
			</if>
	</select>
	
	<!-- 오늘 기준 예약 정보의 행갯수 -->
	<select id="selectListBySysdateCnt" parameterType="map" resultType="int">
		SELECT
		     count(*) AS cnt
		FROM 
		    booking b
		WHERE
		    b.room_id IN 
		    (SELECT	
		        room_id
		    FROM
		        room
		    WHERE
		        user_id = #{userId})
			<if test='actionType == null or actionType.equals("")'>
		   	    AND TRUNC(b.check_out) = TRUNC(SYSDATE)
		   	    AND b.bookstat_code = 'bst02'
			</if>
			<if test='actionType != null and actionType.equals("hosting")'>
		        AND TRUNC(b.check_in) <![CDATA[<=]]> TRUNC(SYSDATE)
		        AND TRUNC(b.check_out) >= TRUNC(SYSDATE)
		        AND b.bookstat_code = 'bst02'
			</if>
			<if test='actionType != null and actionType.equals("checkIn")'>
		        AND TRUNC(b.check_in) = TRUNC(SYSDATE)
		        AND b.bookstat_code = 'bst02'
			</if>
			<if test='actionType != null and actionType.equals("upComing")'>
		        AND TRUNC(b.check_in) > TRUNC(SYSDATE)
		        AND b.bookstat_code = 'bst02'
			</if>
			<if test='actionType != null and actionType.equals("pendingReview")'>
		        AND b.bookstat_code = 'bst03'
			</if>
	</select>
	
	
	<!-- 업데이트처리 -->
	<update id="updateBookstat" parameterType="map">
		UPDATE
		    booking
		SET
		    bookstat_code = 'bst03'
		WHERE
		    booking_id = #{bookingId}
	</update>

	<!-- 호스트의 월별 예약수 -->
	<select id="selectListByMonthCnt" parameterType="map" resultType="camelCaseMap">
		SELECT
		     TO_CHAR(check_in, 'YYYY/MM') AS booking_month
		    ,COUNT(*) AS booking_count
		FROM
		    booking
		WHERE
		    TO_CHAR(check_in, 'YYYY') = TO_CHAR(SYSDATE, 'YYYY')
		    AND user_id = #{userId}
		GROUP BY
		    TO_CHAR(check_in, 'YYYY/MM')
		ORDER BY
		    booking_month
	</select>
	
	<!-- 호스트의 숙소별 예약수 -->
	<select id="selectListByRoomCnt" parameterType="map" resultType="camelCaseMap">
	    SELECT
	         r.room_name
	        ,COUNT(*) AS booking_count
	    FROM
	        booking b
	    JOIN
	        room r
	    ON
	        b.room_id = r.room_id
	    WHERE
	        b.user_id = #{userId}
	    GROUP BY
	         b.room_id
	        ,r.room_name
	    ORDER BY
	        b.room_id
	</select>
	
	<!-- 호스트의 숙소별 평점 -->
	<select id="selectListByAvgRating" parameterType="map" resultType="camelCaseMap">
		SELECT
		     rm.room_name
		    ,ROUND(AVG(r.rating), 1) AS average_rating
		FROM
		    booking b
		JOIN
		    review r ON b.booking_id = r.booking_id
		JOIN
		    room rm ON b.room_id = rm.room_id
		WHERE
		    b.user_id = #{userId}
		GROUP BY
		     rm.room_name
		    ,b.room_id
	</select>
	
	<!-- 호스트의 숙소의 위시리스트된 갯수 -->
	<select id="selectListByWishlistCnt" parameterType="map" resultType="camelCaseMap">
		SELECT 
		     r.room_name
		    ,COUNT(*) AS total_count
		FROM
		    room r
		JOIN
		    wishlist w ON r.room_id = w.room_id
		WHERE 
		    r.user_id = #{userId}
		GROUP BY 
		    r.room_name
    </select>
</mapper>