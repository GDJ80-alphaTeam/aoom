<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alpha.aoom.booking.service.BookingMapper">
	
	<!-- 컬럼 이름 sql조각 -->
	<sql id="booking_col">
		 b.booking_id
		,b.room_id
		,b.user_id
		,b.stay_people
		,b.create_date
		,b.bookstat_code
		,b.paystat_code
	</sql>

	<!-- 로그인한 사용자의 예약정보 + 숙소정보 조회 -->
	<select id="selectByUserId" parameterType="map" resultType="camelCaseMap">
		SELECT
			*
		FROM	
			(SELECT
			     bookingDate.booking_id
			    ,b.create_date
			    ,b.room_id 
			    ,b.bookstat_code
			    ,b.stay_people
			    ,r.address
			    ,r.room_name
			    ,r.user_id AS host_id  
			    ,r.main_image 
			    ,c.code_name AS paystat_name
			    ,c2.code_name AS bookstat_name
			    ,bookingDate.start_date
			    ,bookingDate.end_date
			    ,bookingDate.oneday_price
			    ,rownum AS rn
			FROM
			    booking b
			LEFT JOIN
			    room r 
			    on b.room_id = r.room_id
			LEFT JOIN 
			    code c
			    on b.paystat_code = c.code_key
			LEFT JOIN 
			    code c2
			    on b.bookstat_code = c2.code_key
			LEFT JOIN    
			    (SELECT
			        booking_id 
			        ,to_char(min(oneday), 'yy-mm-dd') AS start_date
			        ,to_char(max(oneday+1), 'yy-mm-dd') AS end_date
			        ,sum(oneday_price) AS oneday_price
			    FROM     
			        booking_oneday_price_map
			    WHERE
			    	1=1
			    	<choose>
					    <when test="userId != null and bookingId != null">
					        AND booking_id = #{bookingId}
					    </when>
					    <otherwise>
					        <if test="userId != null"> 
					            AND booking_id IN (
					                SELECT 
					                    booking_id
					                FROM     
					                    booking 
					                WHERE 
					                    user_id = #{userId}
					                )    
					        </if>
					        <if test="bookingId != null">
					            AND booking_id = #{bookingId}
					        </if>
					    </otherwise>
					</choose>
			    GROUP BY
			        booking_id
			    ORDER BY
			        booking_id  
			     )  bookingDate
			     ON bookingDate.booking_id = b.booking_id 
			WHERE 
				1=1
				<if test="userId != null">
			    	AND b.user_id = #{userId}
			    </if>
			    <if test="bookingId != null">
			    	AND b.booking_id = #{bookingId}
			    </if>
		)			    
		WHERE
       		rn <![CDATA[>]]> #{beginRow} and rn <![CDATA[<=]]> #{endRow}    
	</select>
	
	<!-- 유저의 총예약수 -->
	<select id="selectByTotalCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(*) AS cnt
		FROM
			booking	
		WHERE 
			user_id = #{userId}	
	</select>
	
	<!-- 예약추가 -->
	<insert id="insert" parameterType="map">
 	    <!-- booking INSERT 전 사용가능한 booking_Id가져와서 param에 추가후, INSERT 쿼리에 적용 -->
	    <selectKey keyProperty="bookingId" resultType="String" order="BEFORE">
	        SELECT 
	        	'b' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(NVL(MAX(SUBSTR(booking_id, 10, 2)), 0) + 1, 2, '0') AS booking_id
	        FROM 
	        	booking
	        WHERE 
	        	booking_id LIKE 'b' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
	    </selectKey>
		INSERT INTO booking(
		     booking_id
		    ,room_id
		    ,user_id
		    ,stay_people
		    ,create_date
		    ,bookstat_code
		    ,paystat_code
		) VALUES(
		     #{bookingId}
		    ,#{roomId}
		    ,#{userId}
		    ,#{usePeople}
		    ,SYSDATE
		    ,'bst02'
		    ,'pay02'
		)
	</insert>
	
	<!-- 후기입력시 예약상태변화 -->
	<update id="updateBookingStat" parameterType="map">
		UPDATE 
			booking
		SET 
			bookstat_code = #{bookstatCode}
		WHERE 
			booking_id = #{bookingId}
	</update>
	
	<!-- 예약페이지 접근시 유효성검사 -->
	<select id="selectByInvalidAccess" parameterType="map" resultType="int">
		SELECT
		    count(*) as cnt
		FROM
		    booking
		WHERE
		    user_id = #{userId}
		    AND booking_id = #{bookingId}
	</select>
	
	<!-- 로그인 유저의 호스팅한 숙소의 예약 목록 -->
	<select id="selectListByUserId" parameterType="map" resultType="camelCaseMap">
		SELECT
		     TO_CHAR(MIN(oneday), 'yy/mm/dd') AS check_in
			,TO_CHAR(MAX(oneday+1), 'yy/mm/dd') AS check_out
		    ,br.room_name
		    ,br.user_id AS guest_id
		    ,br.bookstat_code
		FROM
		    booking_oneday_price_map bopm
		INNER JOIN
		    (
		    SELECT
		    	 <include refid="booking_col"/>
		        ,r.room_name
		    FROM
		        booking b
		    INNER JOIN
		        (
		        SELECT
		            room_id,
		            room_name
		        FROM
		            room
		        WHERE
		            user_id = #{userId}
		            AND roomstat_code = 'rst03'
		        ) r
		    ON
		        b.room_id = r.room_id
		    )br
		ON
		    bopm.booking_id = br.booking_id
		GROUP BY
		    br.room_name,
		    br.user_id,
		    br.bookstat_code,
		    oneday
	</select>
</mapper>