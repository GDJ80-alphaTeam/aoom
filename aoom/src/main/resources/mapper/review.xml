<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alpha.aoom.review.service.ReviewMapper">
	<!-- 컬럼 이름 sql조각 -->
	<sql id="review_col">
		booking_id
       ,room_id
       ,user_id
       ,rating
       ,review_content
       ,review_image
       ,original_name
       ,create_date
	</sql>
	
	<!-- 숙소 리뷰 목록 조회-->
	<select id="selectList" parameterType="map" resultType="camelCaseMap">
	 SELECT
        *
        FROM
        ( 
            SELECT 
                ROWNUM as rn 
               ,<include refid="review_col"/>         
            FROM (
                SELECT 
                 <include refid="review_col"/>
                FROM 
                    review
                WHERE 
                    room_id = #{roomId}	 
                ORDER BY create_date DESC  
            )  
         ) r
         LEFT JOIN
            users
         ON
         	r.user_id = users.user_id
         WHERE
			rn <![CDATA[>]]> #{beginRow} and rn <![CDATA[<=]]> #{endRow}
	</select>
	
	<!-- 해당하는 숙소의 리뷰 총 개수 및 총개수rating 평균 -->
	<select id="selectByAvgCnt" parameterType="map" resultType="camelCaseMap">
		SELECT 
			 COUNT(*) AS cnt
			,ROUND(AVG(rating), 1) AS avg 		
		FROM 
			review
		WHERE 
			room_id = #{roomId}	
	</select>
	
	<!-- 해당하는 숙소 주인이 받았던 후기 총 개수 , 프로필에서 cnt와 평점표시-->
	<select id="selectByHostTotalCnt" parameterType="map" resultType="camelCaseMap">
		SELECT 
			 COUNT(*) AS cnt 
		    ,ROUND(AVG(rating), 1) AS avg 
		FROM
			review
		INNER JOIN
			(
    		SELECT
    			room_id
    		FROM
    			room
    		WHERE
    			1=1
    			<if test="#roomId != null">
    			AND user_id =
    			(
    			SELECT 
       				user_id
    			FROM 
        			room
    			WHERE
        			room_id =  #{roomId}
      			)
      			</if>
      			<if test="userId != null">
      			AND user_id = #{userId}
      			</if>
		) a
		ON 
		review.room_id = a.room_id
		
	</select>
	
	<!-- 숙소의 평점과 후기의 갯수 조회 -->
	<select id="selectByRatingAvgReviewCnt" parameterType="map" resultType="camelCaseMap">
		SELECT
		     room_id
		    ,ROUND(AVG(rating), '1') AS avg
		    ,COUNT(room_id) AS cnt
		FROM
		    review
		WHERE
		    room_id = #{roomId}
		GROUP BY
		    room_id
	</select>
	
	<!-- 리뷰작성 -->
	<insert id="insert" parameterType="map">
		INSERT INTO review(
				<include refid="review_col"/>
		) VALUES(
			 #{bookingId}
	       	,#{roomId}
	       	,#{userId}
	       	,#{rating}
	       	,#{reviewContent}
	       	,#{reviewImage}
	       	,#{originalName}
	       	,sysdate
		) 
	</insert>
	
	<!-- 리뷰작성 사진X -->
	<insert id="insertContent" parameterType="map">
		INSERT INTO review(
				booking_id
		       ,room_id
		       ,user_id
		       ,rating
		       ,review_content
		       ,create_date
		) VALUES(
			 #{bookingId}
	       	,#{roomId}
	       	,#{userId}
	       	,#{rating}
	       	,#{reviewContent}
	       	,sysdate
		) 
	</insert>
	
	<!-- 프로필에서 프로필주인이 받은 리뷰검색 -->
	<select id="selectListByProfile" parameterType="map" resultType="camelCaseMap">
		select
    		*
         FROM
	         (
	         SELECT        
	             rownum as rn
	            ,re.booking_id
	            ,r.room_id
	            ,u.user_image
	            ,u.user_id
	            ,u.user_name
	            ,re.rating
	            ,re.review_content
	            ,re.review_image
	            ,re.original_name
	            ,re.create_date                                                                                                                                                                                                                                        
			FROM
				review re
			INNER JOIN
				(
	    		SELECT
	    			*
	    		FROM
	    			room 
	    		WHERE
	    			user_id = #{userId}    			                                  			
			) r
			ON 
	            re.room_id = r.room_id 
	        INNER JOIN
	            users u
	        ON
	            u.user_id = re.user_id
	        )
    	WHERE
			rn <![CDATA[>]]> #{beginRow} and rn <![CDATA[<=]]> #{endRow}
	</select>
</mapper>