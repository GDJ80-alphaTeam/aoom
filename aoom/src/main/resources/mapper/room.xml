<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alpha.aoom.room.service.RoomMapper">
	
	<!-- 컬럼 이름 sql조각 -->
	<sql id="room_col">
		 r.room_id
		,r.user_id
		,r.room_name
		,r.roomtype_code
		,r.roomcate_code
		,TO_CHAR(r.default_price, '999,999,999') AS default_price
		,TO_CHAR(r.start_date, 'YYYY-MM-DD') AS start_date
		,TO_CHAR(r.end_date, 'YYYY-MM-DD') AS end_date
		,REPLACE(r.address, '^', ' ') AS address
		,r.roomstat_code
		,r.room_content
		,r.reject_content
		,r.max_people
		,r.total_space
		,r.total_bed
		,r.total_bath
		,r.create_date
		,r.update_date
		,r.main_image
		,r.original_name
		,r.bank_code
		,r.account_no
		,r.views
		,r.address AS original_address
		,r.default_price AS original_default_price
	</sql>	
	
	<!-- 숙소 전체 목록 조회 retrieveList -->
	<select id="select" resultType="camelCaseMap">
		SELECT
		    <include refid="room_col" />
		FROM
		    room r
		WHERE
			roomstat_code = 'rst03'
	</select>
	
	<!-- 숙소 상세조회 selectOne -->
	<select id="selectOne" parameterType="Map" resultType="camelCaseMap">
		SELECT 
			 <include refid="room_col" />
			,u.user_name
			,u.user_image
			,TRUNC(MONTHS_BETWEEN(SYSDATE, u.create_date)) as month
	        ,TRUNC(MONTHS_BETWEEN(SYSDATE, u.create_date) / 12) as year
	        ,TRUNC(MOD(MONTHS_BETWEEN(SYSDATE, u.create_date), 12)) as left_month
		FROM 
			room r	
		LEFT JOIN
			users u
		ON
			r.user_id = u.user_id							
		WHERE 
			r.room_id = #{roomId} 			 
	</select>
			
	<!-- user가 호스팅 중인 숙소 목록 조회 retrieveList -->
	<select id="selectByUserId" parameterType="map" resultType="camelCaseMap">
       	SELECT
       		*
		FROM
        (
			SELECT
				<include refid="room_col" />
		        ,c.code_name
       			,ROW_NUMBER() OVER (ORDER BY r.create_date DESC) AS rn
			FROM
				room r
			INNER JOIN
				code c
			ON
		    	r.roomstat_code = c.code_key
	        WHERE
	        	r.user_id = #{userId}
	        	AND r.roomstat_code !='rst05'
	        ORDER BY
	        	r.create_date DESC
         ) r
       	WHERE
       		1=1
       		<if test="beginRow != null and !beginRow.equals('') and endRow != null and !endRow.equals('')">
	       		AND rn <![CDATA[>]]> #{beginRow} 
	       		AND rn <![CDATA[<=]]> #{endRow}
       		</if>
	</select>
	
	<!-- 조회수 TOP4 숙소 조회 -->
	<select id="selectByViews" resultType="camelCaseMap">
		SELECT 
		     r.*
		    ,COALESCE(TO_CHAR(ROUND(rv.avg_rating, 1)), '0') AS avg_rating
		FROM (
		    SELECT
		        <include refid="room_col" />
		    FROM
		        room r
		    ORDER BY 
		        r.views DESC
		) r
		LEFT JOIN (
		    SELECT
		         room_id
		        ,AVG(rating) AS avg_rating
		    FROM
		        review
		    GROUP BY
		        room_id
		) rv ON r.room_id = rv.room_id
		WHERE 
		    ROWNUM <![CDATA[<=]]> 4 
		    AND r.roomstat_code = 'rst03'
	</select>
	
	<!-- 별점 TOP4 숙소 조회 -->
	<select id="selectByRating" resultType="camelCaseMap">
		SELECT
			<include refid="room_col" />
			,COALESCE(ROUND(s.avg_rating, 1), 0) AS avg_rating
		FROM
			room r
	    INNER JOIN 
	        (SELECT 
	             room_id
                ,ra.avg_rating AS avg_rating
	         FROM (
	             SELECT
	             	 room_id
	             	,AVG(rating) AS avg_rating
	             	,ROW_NUMBER() OVER (ORDER BY AVG(rating) DESC) rn
	             FROM 
	             	review
	             GROUP BY 
	             	room_id
	             ) ra
	         WHERE 
	         	rn <![CDATA[<=]]> 4
	         ) s
	     ON
	     	r.room_id = s.room_id
	     WHERE
			roomstat_code = 'rst03'
	</select>
	
	<!-- 예약 TOP4 숙소 조회 -->
	<select id="selectByBooking" resultType="camelCaseMap">
		SELECT
		     <include refid="room_col" />
		    ,bct.cnt
		    ,ROUND(COALESCE(rv.avg_rating, 0), 1) AS avg_rating
		FROM
		    room r
		    INNER JOIN (
		        SELECT	
		             bc.room_id
		            ,bc.cnt
		        FROM (
		            SELECT
		                 room_id
		                ,COUNT(*) AS cnt
		            FROM
		                booking
		            GROUP BY
		                room_id
		        ) bc
		        WHERE
		            ROWNUM <![CDATA[<=]]> 4
		    ) bct
		    ON r.room_id = bct.room_id
		    LEFT JOIN (
		        SELECT
		             room_id
		            ,AVG(rating) AS avg_rating
		        FROM
		            review
		        GROUP BY
		            room_id
		    ) rv
		    ON r.room_id = rv.room_id
		WHERE
		    r.roomstat_code = 'rst03'
	</select>
	
	<!-- 위시리스트 TOP4 숙소 조회 -->
	<select id="selectByWishList" resultType="camelCaseMap">
	SELECT
	     <include refid="room_col" />
	    ,ROUND(COALESCE(rv.avg_rating, 0), 1) AS avg_rating
	FROM
	    room r
	    INNER JOIN (
	        SELECT
	            w.room_id
	        FROM (
	            SELECT
	                 room_id
	                ,COUNT(*) AS cnt
	            FROM
	                wishlist
	            GROUP BY
	                room_id
	        ) w
	        WHERE
	            ROWNUM <![CDATA[<=]]> 4
	    ) wr
	    ON r.room_id = wr.room_id
	    LEFT JOIN (
	        SELECT
	             room_id
	            ,AVG(rating) AS avg_rating
	        FROM
	            review
	        GROUP BY
	            room_id
	    ) rv
	    ON r.room_id = rv.room_id
	WHERE
	    r.roomstat_code = 'rst03'
	</select>
	
	<!-- 검색, 필터, 카테고리 조건으로 조회 -->
	<select id="selectBySearch" parameterType="map" resultType="camelCaseMap">

        SELECT DISTINCT 
             r.room_id
            ,r.room_name
            ,r.default_price
            ,REPLACE(r.address, '^', '  ') AS address
            ,r.main_image
            ,(SELECT ROUND(AVG(r2.RATING),1)
             FROM REVIEW r2
             WHERE r.ROOM_ID = r2.ROOM_ID 
             GROUP BY (r2.ROOM_ID)) AS avg
        FROM ROOM r
        <if test='amenities != null'>
        JOIN (
            SELECT ROOM_ID AS ROOM_ID 
            FROM AMENITIES
                WHERE AMENITIES_CODE IN
                <foreach item="amenity" collection="amenities" open="(" separator="," close=")">
                    #{amenity}
                </foreach>
                GROUP BY ROOM_ID
                HAVING COUNT(DISTINCT AMENITIES_CODE) = #{amenitiesLength}
        ) a ON r.ROOM_ID = a.ROOM_ID 
        </if>
        <if test='(startDate !=null and !startDate.isEmpty() and endDate != null and !endDate.isEmpty()) || (lowPrice !=null and highPrice != null)'>
        JOIN (
            SELECT o.ROOM_ID 
            FROM ONEDAY_PRICE o
            WHERE ONESTAT_CODE = 'one01'
            <if test='startDate !=null and !startDate.isEmpty() and endDate != null and !endDate.isEmpty()'>
                AND o.ONEDAY BETWEEN TO_DATE(#{startDate}, 'YYYY/MM/DD') AND (TO_DATE(#{endDate}, 'YYYY/MM/DD')-1)
            </if>
            <if test='lowPrice !=null and highPrice != null'>
                AND o.oneday_price <![CDATA[>=]]> #{lowPrice} AND o.oneday_price <![CDATA[<=]]> #{highPrice}
            </if>
            GROUP BY o.ROOM_ID 
            <if test='startDate !=null and !startDate.isEmpty() and endDate != null and !endDate.isEmpty()'>
                HAVING COUNT(DISTINCT o.ONEDAY) = ((TO_DATE(#{endDate}, 'YYYY/MM/DD')-1) - TO_DATE(#{startDate}, 'YYYY/MM/DD')) + 1
            </if>
        ) d ON d.ROOM_ID = r.ROOM_ID
        </if>
        WHERE
            roomstat_code = 'rst03'
        <if test='address !=null and !address.isEmpty()'>
            AND address LIKE '%'||#{address}||'%'  
        </if>
        <if test='usePeople !=null and !usePeople.isEmpty()'>
            AND max_people >= #{usePeople}
        </if>
        <if test='totalSpace !=null'>
            AND total_space >= #{totalSpace} 
        </if>
        <if test='totalBed !=null'>
            AND total_bed >= #{totalBed}
        </if>
        <if test='totalBath !=null'>
            AND total_bath >= #{totalBath}
        </if>
        <if test='category !=null'>
            AND roomcate_code = #{category}
        </if>
	</select>
	
	<!-- 숙소 등록 - 숙소 등록 1단계 전 숙소 초기화 -->
	<insert id="insert" parameterType="map">
 		 <!-- ROOM INSERT 전 사용가능한 roomId가져와서 param에 추가후, INSERT 쿼리에 적용 -->
		 <selectKey keyProperty="roomId" resultType="String" order="BEFORE">
	        SELECT 
	        	'r' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(NVL(MAX(SUBSTR(room_id, 10, 2)), 0) + 1, 2, '0') AS room_id
	        FROM 
	        	room
	        WHERE 
	        	room_id LIKE 'r' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
	    </selectKey>
		
		INSERT INTO ROOM(
			 room_id
			,user_id
			,roomstat_code
		) VALUES(
			 #{roomId}
			,#{userId}
			,'rst06'
		)
	</insert>
	
	<!-- 숙소 등록 - 숙소 등록 1,2,3단계에서 입력한 정보 DB에 업데이트 -->
	<update id="update" parameterType="map">
		UPDATE
			room
		SET
			update_date = SYSDATE
			<!-- 1단계 입력 정보 -->
			<if test='roomtypeCode != null and !roomtypeCode.equals("")'>
				,roomtype_code = #{roomtypeCode}
			</if>
			<if test='roomcateCode != null and !roomcateCode.equals("")'>
				,roomcate_code = #{roomcateCode}
			</if>
			<if test='roomstatCode != null and !roomstatCode.equals("")'>
				,roomstat_code = #{roomstatCode}
			</if>
			<if test='startDate != null and !startDate.equals("")'>
				,start_date = #{startDate}
			</if>
			<if test='endDate != null and !endDate.equals("")'>
				,end_date = #{endDate}
			</if>
			<if test='address != null and !address.equals("")'>
				,address = #{address}
			</if>
			<if test='maxPeople != null and !maxPeople.equals("")'>
				,max_people = #{maxPeople}
			</if>
			<if test='totalSpace != null and !totalSpace.equals("")'>
				,total_space = #{totalSpace}
			</if>
			<if test='totalBed != null and !totalBed.equals("")'>
				,total_bed = #{totalBed}
			</if>
			<if test='totalBath != null and !totalBath.equals("")'>
				,total_bath = #{totalBath}
			</if>
			<!-- 2단계 입력 정보 -->
			<if test='roomName != null and !roomName.equals("")'>
				,room_name = #{roomName}
			</if>
			<if test='roomContent != null and !roomContent.equals("")'>
				,room_content = #{roomContent}
			</if>
			<if test='mainImage != null and !mainImage.equals("")'>
				,main_Image = #{mainImage}
			</if>
			<if test='originalName != null and !originalName.equals("")'>
				,original_name = #{originalName}
			</if>
			<!-- 3단계 입력 정보 -->
			<if test='defaultPrice != null and !defaultPrice.equals("")'>
				,default_price = #{defaultPrice}
			</if>
			<if test='bankCode != null and !bankCode.equals("")'>
				,bank_code = #{bankCode}
			</if>
			<if test='accountNo != null and !accountNo.equals("")'>
				,account_no = #{accountNo}
			</if>
		WHERE
			room_id = #{roomId}
			<if test="userId != null and !userId.equals('')">
				AND EXISTS (
			        SELECT 
			        	user_id
			        FROM 
			        	users
			        WHERE 
			        	user_id = #{userId}
			        	AND user_pw = #{userPw}
			        	AND userstat_code = 'ust01'
			    )
			</if>
	</update>
	
	<!-- user가 호스팅하고있는 숙소의 갯수 -->
	<select id="selectByTotalCnt" parameterType="map" resultType="int">
		SELECT 
			 COUNT(*) AS cnt
		FROM 
			room
		WHERE 
			user_id = #{userId}
			AND roomstat_code !='rst05'
	</select>
	
	<!-- 숙소의 카테고리 이름 조회 -->
	<select id="selectByCategoryName" parameterType="map" resultType="camelCaseMap">
		SELECT
		     r.room_id AS room_id
		    ,r.room_name AS room_name
		    ,r.max_people AS max_people
		    ,c.code_name AS category
		    ,r.main_image
		FROM
		    room r
		INNER JOIN
		    code c
		ON
		    r.roomcate_code = c.code_key
		WHERE
		    r.room_id = #{roomId}
	</select>

</mapper>