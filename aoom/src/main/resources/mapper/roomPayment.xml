<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alpha.aoom.roomPayment.service.RoomPaymentMapper">
	<sql id="roomPayment_col">
		 payment_id
		,booking_id
		,room_id
		,user_id
		,paytype_code
		,card_no
		,refund_account
		,payment_price
		,create_date
	</sql>
	
	<!-- 결제 내역 추가  -->
	<insert id="insert" parameterType="map">
		<selectKey keyProperty="paymentId" resultType="String" order="BEFORE">
	        SELECT 
	        	'p' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(NVL(MAX(SUBSTR(payment_id, 10, 2)), 0) + 1, 2, '0')
	        FROM 
	        	room_payment
	        WHERE 
	        	payment_id LIKE 'p' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
		</selectKey>
		
		INSERT INTO room_payment (
			 PAYMENT_ID
			,BOOKING_ID
			,ROOM_ID
			,USER_ID
			,PAYTYPE_CODE
			,CARD_CODE
			,CARD_NO
			,BANK_CODE
			,REFUND_ACCOUNT
			,PAYMENT_PRICE
			,CREATE_DATE
		) VALUES (
			 #{paymentId}
			,#{bookingId}
			,#{roomId}
			,#{userId}
			<if test="(cardNo != null and !cardNo.equals('')) and (refundAccount == null or refundAccount.equals(''))">
				,'pmt01'
				,#{card}
				,#{cardNo}
				,null
				,null
			</if>
			<if test="(refundAccount != null and !refundAccount.equals('')) and (cardNo == null or cardNo.equals(''))">
				,'pmt02'
				,null
				,null
				,#{bank}
				,#{refundAccount}
			</if>
			,#{paymentPrice}
			,SYSDATE
			)
	</insert>
	
	<!-- 해당예약의 결제정보 검색 -->
	<select id="selectByBookingId" parameterType="map" resultType="camelCaseMap">
		SELECT
	    	<include refid="roomPayment_col"/>
		FROM  
	    	room_payment
		WHERE
	    	booking_id = #{bookingId}
	</select>
	
	<!-- 결제취소시 계좌값이 변동되었다면 변경 -->
	<update id="updateAccount" parameterType="map" >
		UPDATE 
            room_payment
        SET
             refund_account = #{refundAccount}
            ,bank_code = #{bankCode}
        WHERE
            payment_id = #{paymentId}
            AND booking_id = #{bookingId}
            AND (refund_account != #{refundAccount} OR bank_code != #{bankCode})
	</update>
	
	<!-- 호스트의 월별 수입(전체 or 숙소별) -->
	<select id="selectByHostRevenue" parameterType="map" resultType="camelCaseMap">
	    SELECT
	         TO_CHAR(ri.payment_month, 'YYYY-MM') AS payment_month
	        ,SUM(ri.payment_price) AS total_amount
	        <choose>
	            <when test="roomId != null and !roomId.equals('')">
	               ,ri.room_name
	               ,ri.start_date
	               ,ri.end_date
	            </when>
	            <otherwise>
	                ,'전체' AS room_name
	            </otherwise>
	        </choose>
	    FROM (
	        SELECT
	             rp.create_date AS payment_month
	            ,rp.payment_price
	            ,r.room_name
	            ,r.room_id
	            ,TO_CHAR(r.start_date, 'YYYY-MM') AS start_date
	            ,TO_CHAR(r.end_date, 'YYYY-MM') AS end_date
	        FROM
	            room r
	        INNER JOIN
	            room_payment rp 
	        ON r.room_id = rp.room_id
	        WHERE
	            r.user_id = #{userId}
	            AND r.roomstat_code = 'rst03'
	            AND rp.booking_id NOT IN (
	                SELECT
	                    booking_id
	                FROM
	                    cancel_refund
	            )
	            AND rp.booking_id IN (
	            	SELECT
	            		booking_id
	            	FROM
	            		booking
	            	WHERE
	            		bookstat_code IN ('bst03','bst04')
	            )
	    ) ri
	    <if test="roomId != null and !roomId.equals('')">
	        WHERE ri.room_id = #{roomId}
	    </if>
	    GROUP BY
	        TO_CHAR(ri.payment_month, 'YYYY-MM')
	        <choose>
	            <when test="roomId != null and !roomId.equals('')">
	               ,ri.room_name
	               ,ri.start_date
	               ,ri.end_date
	            </when>
	            <otherwise>
	               ,'전체'
	            </otherwise>
	        </choose>
	    ORDER BY
	        payment_month
	</select>

	<!-- 호스트 - 월별 수입에서 해당 월의 수입 상세정보 -->
	<select id="selectByPaymentMonth" parameterType="map" resultType="camelCaseMap">
		SELECT
		     b.booking_id
		    ,b.room_id
		    ,r.room_name
		    ,b.user_id
		    ,b.stay_people
		    ,cb.code_name AS bookstat_name
		    ,TO_CHAR(b.create_date, 'YYYY-MM-dd') AS booking_day
		    ,rp.payment_price
		    ,cp.code_name AS paytype_name
		FROM
		    booking b
		INNER JOIN
		    room_payment rp 
		ON b.booking_id = rp.booking_id
		INNER JOIN
		    code cp 
		ON rp.paytype_code = cp.code_key
		INNER JOIN
		    code cb 
		ON b.bookstat_code = cb.code_key
		INNER JOIN
		    room r
		ON b.room_id = r.room_id
		WHERE
		    b.booking_id NOT IN (
		        SELECT booking_id
		        FROM cancel_refund
		    )
		    AND b.bookstat_code IN ('bst03', 'bst03')
		    AND TO_CHAR(b.create_date, 'MM') = #{selectedMonth}
		    <if test="roomId != null and !roomId.equals('')">
		         AND b.room_id = #{roomId}
		    </if>
	</select>
</mapper>