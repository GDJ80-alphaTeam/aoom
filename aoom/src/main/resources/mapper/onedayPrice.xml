<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alpha.aoom.onedayPrice.service.OnedayPriceMapper">

	<!-- 컬럼 이름 sql조각 -->
	<sql id="onedayPrice_col">
		 oneday
		,room_id
		,oneday_price
		,update_date
		,left_people
		,onestat_code
		,create_date
	</sql>
	
	<!-- onedayPrice의 예약상태의 따른 리스트 검색 -->
	<select id="selectByStatCode" parameterType="map" resultType="camelCaseMap">
		SELECT
	    	TO_CHAR(oneday, 'YYYY-MM-DD') AS oneday
	    FROM
	        oneday_price    
	    WHERE 
	        room_id = #{roomId} 
	    	AND onestat_code = #{onestateCode}        
    </select>

    
    <!-- 숙소 등록시 운영일만큼 숙박 가격 추가 -->
    <insert id="insert" parameterType="map">
		INSERT INTO oneday_price(
			 room_id
			,oneday
			,oneday_price
			,left_people
		) VALUES(
			 #{roomId}
			,#{oneday}
			,#{onedayPrice}
			,#{leftPeople}
		)
    </insert>
    
    <!-- 해당 숙소의 하루 숙박 가격 삭제 -->
    <delete id="delete" parameterType="map">
    	DELETE FROM oneday_price
    	WHERE
    		room_id = #{roomId}
    </delete>
    
    <!-- 사용자가 선택한날로부터 예약가능한날짜 표시 -->
    <select id = "selectByOneday" parameterType="map" resultType="camelCaseMap">
    	SELECT 
    		*
   		FROM 
    		oneday_price 
   		WHERE
    		room_id = #{roomId}
    		AND oneday <![CDATA[>=]]> #{selectedDate}
    		AND oneday <![CDATA[<=]]>
        		(SELECT 
        			oneday	     		
        		FROM
		        	(
		        	SELECT
		           		  rownum as rn  
		           		 ,<include refid="onedayPrice_col"/> 
		        	FROM
		            	oneday_price
		        	WHERE 
		        		oneday <![CDATA[>=]]> #{selectedDate}    
		        		AND onestat_code = 'one02'
		        		AND room_Id = #{roomId}        
		        	ORDER BY 
		        		oneday 
		       		)
        		WHERE 
            		rn <![CDATA[>]]> 0 
            		AND rn <![CDATA[<]]> 2 )
    </select>
    
    <!-- 비활성된 예약날짜가 없을시 실행할 쿼리 -->
    <select id = "selectByremain" parameterType="map" resultType="camelCaseMap">
    	SELECT
        	oneday 
        FROM
           	oneday_price
        WHERE 
            room_id = #{roomId} 
            AND oneday <![CDATA[>=]]> #{selectedDate}
            
        UNION     
           
        SELECT  
           	oneday+1
        FROM 
           	oneday_price
        WHERE
           	room_id = #{roomId} 
          	AND oneday <![CDATA[>=]]> #{selectedDate}
    </select>
    
    <!-- 숙박일정에 따른 숙박가격 조회 합계 -->
    <select id="selectByBookingDate" parameterType="map" resultType="camelCaseMap">
	    SELECT
		    TO_CHAR(SUM(oneday_price), '999,999,999') AS sum
		FROM
		    oneday_price
		WHERE
		    room_id = #{roomId}
		    AND oneday BETWEEN TO_DATE(#{startDate}, 'YY/MM/DD') AND (TO_DATE(#{endDate}, 'YY/MM/DD') - 1)
		GROUP BY
		    room_id
    </select>
    
    <!-- 숙박일정에 따른 숙박가격 세부조회리스트(일자별 가격) -->
    <select id="selectByBookingDateDetail" parameterType="map" resultType="camelCaseMap">
	    SELECT
		     TO_CHAR(oneday, 'YYYY/MM/DD') AS oneday
		    ,TO_CHAR(oneday_price, '999,999,999') AS oneday_price
		FROM
		    oneday_price
		WHERE
		    room_id = #{roomId}
	    	AND oneday BETWEEN TO_DATE(#{startDate}, 'YY/MM/DD') AND (TO_DATE(#{endDate}, 'YY/MM/DD') - 1)
    </select>
    
    <!-- 숙박일정에 따른 숙박가격 세부조회리스트(모든컬럼출력) -->
    <select id = "selectListByDuringDate" resultType="camelCaseMap">
    	SELECT
    		<include refid="onedayPrice_col"/> 
    		,TO_CHAR(oneday, 'YYYY/MM/DD') AS oneday_char<!-- to_char를 사용 -->
    	FROM
    		oneday_price
		WHERE
		    room_id = #{roomId}
	    	AND oneday BETWEEN TO_DATE(#{startDate}, 'YY/MM/DD') AND (TO_DATE(#{endDate}, 'YY/MM/DD') - 1)
    </select>

    
    <!-- oneday_price 상태 예약불가로 업데이트, 남은 인원 감소 -->
    <update id="updateByStatUsePeople" parameterType="map">
	    UPDATE
		    oneday_price
		SET 
		     onestat_code = 'one02'
		    ,left_people = left_people - #{usePeople}
		    ,update_date = SYSDATE
		WHERE
		    oneday <![CDATA[>=]]> #{startDate}
		    AND oneday <![CDATA[<]]> #{endDate}
		    AND room_id = #{roomId}
    </update>
    
    <!-- 해당 숙소의 전체 하루숙박가격 -->
	<select id="select" parameterType="map" resultType="camelCaseMap">
		SELECT
			 TO_CHAR(op.oneday, 'YYYY-MM-DD') AS oneday
			,op.room_id
			,TO_CHAR(op.oneday_price, '999,999,999') AS oneday_price
			,op.oneday_price AS original_oneday_price
			,op.update_date
			,op.left_people
			,op.onestat_code
			,op.create_date
			,c.code_name
		FROM
			oneday_price op
		INNER JOIN
			code c
		ON
			op.onestat_code = c.code_key
		WHERE
			op.room_id = #{roomId}
	</select>
	
	<!-- 하루 숙박 가격 수정 -->
	<update id="update" parameterType="map">
		UPDATE
			oneday_price
		SET
			<if test="onedayPrice != null and !onedayPrice.equals('')">
				oneday_price = #{onedayPrice}
			</if>
			<if test="onestatCode != null and !onestatCode.equals('')">
				onestat_code = #{onestatCode}
			</if>
		WHERE
		room_id = #{roomId}
		AND oneday = #{oneday}
		AND NOT EXISTS (
			SELECT 
				oneday
			FROM 
				BOOKING_ONEDAY_PRICE_MAP
			WHERE 
				oneday = #{oneday}
				AND room_id = #{roomId}
		)
	</update>
	
	<!-- 예약취소후 운영가능상태로 변경해줘야함-->
	<update id="updateByCancel" parameterType="map" >
		UPDATE 
			 oneday_price
		SET
		     onestat_code = 'one01'
		    ,left_people = left_people + #{stayPeople}
		WHERE
		    room_id = #{roomId}
		    AND oneday BETWEEN TO_DATE(#{checkIn}, 'YY-MM-DD') AND TO_DATE(#{checkOut}, 'YY-MM-DD') - 1
		    AND onestat_code = 'one02'
	</update>
</mapper>